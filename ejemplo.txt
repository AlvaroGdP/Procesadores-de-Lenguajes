
code {
maquinaFuerte1 := /*
def abierta():
  print("\n----Caja fuerte desbloqueada----\nIntroduzca cualquier numero para volver al estado inicial\n")

def erroneo():
  print("\n----Codigo Erroneo----\nIntroduzca cualquier numero para volver al estado inicial\n")
*/

maquinaFuerte2 := /*
__debugMoor__ = False
*/

}

behaviours {
c1 := /*
print("Introduzca el primer digito")
*/

c2 := /*
print("Introduzca el siguiente digito")
*/
c3 := /*
abierta()
*/
c4 := /*
erroneo()
*/
next_number := /*
print("Introduce número")
    */
close := /*
print("\n----Caja abierta correctamente---- \nCierre la caja al acabar\n")
    */
}

events {
    #Eventos maquina1 y maquina2
    event0 := (0);
    event1 := (1);

    #Eventos maquina2
    eventClose := (cerrar);
}



#Maquina1: Combinacion 1011
moore maquinaFuerte1 {
    states e1, e2, e3, e4, e5, e6, e7, e8, e9;
    output (e1, c1), (e2, c2), (e3, c2), (e4, c2), (e5, c3), (e6, c2), (e7, c2),(e8, c2),(e9, c4);
    transitions (e1, e2, event1), (e2, e3, event0), (e3, e4, event1), (e4, e5, event1), (e1, e6, event0), (e6,   e7, event0), (e6, e7, event1), (e7, e8, event0), (e7, e8, event1), (e8, e9, event0),  (e8, e9, event1), (e9, e1,event0), (e9, e1,event1), (e5, e1, event0), (e5, e1, event1), (e2, e7,event1), (e3, e8,event0), (e4, e9,event0);
}

'''
Maquina2: Combinacion 1101
Debido a la variable de debug __debugMoor__, esta máquina no avisa al usuario sobre códigos correctos o erróneos
La caja fuerte se "abrirá" cuando se introduzcan correctamente los cuatro digitos

Para comprobar el funcionamiento interno de la máquina, cambiar __debugMoor__ a False (en bloque code, arriba),
o bien eliminar esa asignación
'''

moore maquinaFuerte2 {
    # Aqui podemos comprobar que aceptamos que la declaracion states esté delimitada por () o no
    states (q0, q1, q2, q3, q4);
    output (q0, next_number), (q1, next_number), (q2, next_number), (q3, next_number), (q4, close);
    transitions (q0, q0, event0), (q0, q1, event1), (q1, q0, event0), (q1, q2, event1),(q2, q0, event1), (q2, q3, event0), (q3, q0, event0), (q3, q4, event1),(q4, q0, eventClose);
}
